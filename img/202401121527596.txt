SET(METHODNAME HJLCtrl)

set(PACKAGE "${METHODNAME}")
set(PROJECT_VERSION_MAJOR "0")
set(PROJECT_VERSION_MINOR "21")
set(PROJECT_VERSION_PATCH "1020")
set(PROJECT_VERSION_BUILD "0")
set(PROJECT_PACKAGE_VERSION "${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH}.${PROJECT_VERSION_BUILD}")

if(WIN32)
	configure_file(${PROJECT_SOURCE_DIR}/version/version.rc.in ${CMAKE_CURRENT_BINARY_DIR}/version/version.rc @ONLY)
	set(RESOURCES ${CMAKE_CURRENT_BINARY_DIR}/version/version.rc)
endif()
configure_file(${PROJECT_SOURCE_DIR}/version/version.h.in ${CMAKE_CURRENT_BINARY_DIR}/version/version.h @ONLY)
FILE(APPEND ${TMP_CNF_PATH}/version.conf "IOCtrl_${METHODNAME}= \"${PROJECT_PACKAGE_VERSION}\"\n")
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR}/version)

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/include)
LINK_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/library)

AUX_SOURCE_DIRECTORY(${CMAKE_CURRENT_SOURCE_DIR} SRC_LIST)

add_library(${METHODNAME} SHARED ${SRC_LIST} ${EASYLOG_LIST} ${RESOURCES})

TARGET_LINK_LIBRARIES(${METHODNAME} USBIO ctdutil libconfig::libconfig++ jsoncpp_lib easyloggingpp) 

INSTALL(DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/library/" DESTINATION IOCtrl/${METHODNAME})
INSTALL(TARGETS ${METHODNAME} RUNTIME DESTINATION IOCtrl/${METHODNAME})
